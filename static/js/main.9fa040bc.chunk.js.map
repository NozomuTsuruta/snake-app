{"version":3,"sources":["components/Navigation.tsx","components/Field.tsx","components/Button.tsx","components/ManipulationPanel.tsx","utils/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onRestart","onStart","onStop","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","initFields","fieldSize","snake","i","cols","Array","fill","push","y","x","food","getFoodPosition","excludes","Math","floor","random","some","item","initialPosition","initialValues","Difficulty","GameStatus","Direction","OppositeDirection","up","right","left","down","Delta","DirectionKeyCodeMap","37","38","39","40","App","useState","setFields","tick","setTick","direction","setDirection","body","setBody","setStatus","setDifficulty","timer","useRef","unsubscribe","clearInterval","current","useEffect","interval","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9fa040bc.chunk.js","sourcesContent":["import React from \"react\";\n\ntype Props = {\n  length: number;\n  difficulty: number;\n  onChangeDifficulty: (dif: number) => void;\n};\n\nexport const Navigation: React.FC<Props> = ({\n  length,\n  difficulty = 3,\n  onChangeDifficulty,\n}) => {\n  const upVisibility = difficulty < 5 ? \"\" : \"is-hidden\";\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\ntype Props = {\n  fields: string[][];\n};\n\nexport const Field: React.FC<Props> = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>;\n        });\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IStatus } from \"../utils/types\";\n\ntype Props = {\n  status: IStatus;\n  onRestart: () => void;\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Button: React.FC<Props> = ({\n  status,\n  onRestart,\n  onStart,\n  onStop,\n}) => {\n  return (\n    <div className=\"button\">\n      {status === \"gameover\" && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === \"init\" && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"suspended\" && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"playing\" && (\n        <button className=\"btn btn-playing\" onClick={onStop}>\n          stop\n        </button>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IDirection } from \"../utils/types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowLeft,\n  faArrowUp,\n  faArrowDown,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n  onChange: (direction: IDirection) => void;\n};\n\nexport const ManipulationPanel: React.FC<Props> = ({ onChange }) => {\n  const onUp = () => onChange(\"up\");\n  const onRight = () => onChange(\"right\");\n  const onLeft = () => onChange(\"left\");\n  const onDown = () => onChange(\"down\");\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  );\n};\n","import { IPosition } from \"./types\";\nexport const initFields = (fieldSize: number, snake: any) => {\n  const fields: string[][] = [];\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill(\"\");\n    fields.push(cols);\n  }\n  fields[snake.y][snake.x] = \"snake\";\n\n  const food = getFoodPosition(fieldSize, [snake]);\n  fields[food.y][food.x] = \"food\";\n\n  return fields;\n};\n\nexport const getFoodPosition = (fieldSize: number, excludes: any[]) => {\n  while (true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = excludes.some((item) => item.x === x && item.y === y);\n\n    if (!conflict) {\n      return { x, y };\n    }\n  }\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Navigation } from \"./components/Navigation\";\nimport { Field } from \"./components/Field\";\nimport { Button } from \"./components/Button\";\nimport { ManipulationPanel } from \"./components/ManipulationPanel\";\nimport { initFields, getFoodPosition } from \"./utils\";\nimport { IDirection, IPosition, IStatus } from \"./utils/types\";\n\nconst initialPosition = { x: 17, y: 17 };\nconst initialValues = initFields(35, initialPosition);\nconst isCollision = (fieldSize: number, position: IPosition) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n};\n\ninitialValues[9][9] = \"food\";\nconst defaultDifficulty = 3;\nconst Difficulty = [1000, 500, 100, 50, 10];\n\nconst GameStatus = {\n  init: \"init\",\n  playing: \"playing\",\n  suspended: \"suspended\",\n  gameover: \"gameover\",\n} as const;\n\nconst Direction = {\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n} as const;\n\nconst OppositeDirection = {\n  up: \"down\",\n  right: \"left\",\n  left: \"right\",\n  down: \"up\",\n} as const;\n\nconst Delta = {\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n} as const;\n\nconst DirectionKeyCodeMap = {\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n} as const;\n\nconst isEatingMyself = (fields: any, position: any) => {\n  return fields[position.y][position.x] === \"snake\";\n};\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues);\n  const [tick, setTick] = useState(0);\n  const [direction, setDirection] = useState<IDirection>(Direction.up);\n  const [body, setBody] = useState<IPosition[]>([]);\n  const [status, setStatus] = useState<IStatus>(GameStatus.init);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n\n  const timer = useRef<NodeJS.Timeout>();\n\n  const unsubscribe = () => {\n    if (!timer) {\n      return;\n    }\n    clearInterval(timer.current as number | undefined);\n  };\n\n  useEffect(() => {\n    setBody([initialPosition]);\n    const interval = Difficulty[difficulty - 1];\n    timer.current = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n\n  const onStart = () => setStatus(GameStatus.playing);\n\n  const onRestart = () => {\n    timer.current = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, Difficulty[difficulty - 1]);\n    setDirection(Direction.up);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setFields(initFields(35, initialPosition));\n  };\n\n  const onStop = () => setStatus(GameStatus.suspended);\n\n  const onChangeDirection = useCallback(\n    (newDirection: IDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status]\n  );\n\n  useEffect(() => {\n    const handleKeyDown = (e: any) => {\n      const newDirection =\n        DirectionKeyCodeMap[e.keyCode as \"37\" | \"38\" | \"39\" | \"40\"];\n      if (!newDirection) {\n        return;\n      }\n\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [onChangeDirection]);\n\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    };\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      return false;\n    }\n    const newBody = [...body];\n    if (fields[newPosition.y][newPosition.x] !== \"food\") {\n      const removingTrack = newBody.pop();\n      fields[removingTrack!.y][removingTrack!.x] = \"\";\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = \"food\";\n    }\n    fields[newPosition.y][newPosition.x] = \"snake\";\n    newBody.unshift(newPosition);\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}